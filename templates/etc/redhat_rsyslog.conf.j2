{{ ansible_managed|comment }}

##### GLOBAL DIRECTIVES ####

# Increase message size
$MaxMessageSize 64k
# provides UDP syslog reception
{% if (rsyslog_allow_udp is defined and rsyslog_allow_udp) %}
$ModLoad imudp
$UDPServerRun {{ rsyslog_udp_port|default('514') }}
{% else %}
#$InputModLoad imudp
#$UDPServerRun 514
{% endif %}

# provides TCP syslog reception
{% if rsyslog_allow_tcp is defined and rsyslog_allow_tcp %}
$ModLoad imtcp
$InputTCPServerRun {{ rsyslog_tcp_port|default('514') }}
{% else %}
#$ModLoad imtcp
#$InputTCPServerRun 514
{% endif %}

$ModLoad imuxsock
# Provides access to the systemd journal
$ModLoad imjournal

# Reads kernel messages (the same are read from journald)
$ModLoad imklog

# Provides --MARK-- message capability
$ModLoad immark

{% if (rsyslog_highprecision is defined and rsyslog_highprecision) %}
# To enable high precision timestamps, comment out the following line.
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
{% elif rsyslog_highprecision is defined and not rsyslog_highprecision %}
# To enable traditional low-precision timestamps, uncomment the following line.
#$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
{% endif %}

# Where to place auxiliary files
$WorkDirectory /var/lib/rsyslog

# File syncing capability is disabled by default. This feature is usually not required, not useful and an extreme performance hit
#$ActionFileEnableSync on

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf

# Turn off message reception via local log socket; local messages are retrieved through imjournal now.
$OmitLocalLogging on

# File to store the position in the journal
$IMJournalStateFile imjournal.state

# Enable non-kernel facility klog messages
$KLogPermitNonKernelFacility on

# File Permissions
$FileOwner root
$FileGroup adm
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022

# Include all config files in /etc/rsyslog.d/
#
$IncludeConfig /etc/rsyslog.d/*.conf


#### RULES ####

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
*.info;mail.none;authpriv.none;cron.none                /var/log/messages

# The authpriv file has restricted access.
authpriv.*                                              /var/log/secure

# Log all the mail messages in one place.
mail.*                                                  -/var/log/maillog


# Log cron stuff
cron.*                                                  /var/log/cron

# Everybody gets emergency messages
*.emerg                                                 :omusrmsg:*

# Save news errors of level crit and higher in a special file.
uucp,news.crit                                          /var/log/spooler

# Save boot messages also to boot.log
local7.*                                                /var/log/boot.log


# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
#$ActionQueueFileName fwdRule1 # unique name prefix for spool files
#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown
#$ActionQueueType LinkedList   # run asynchronously
#$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional


{% if rsyslog_options|length>0 %}
    {% for option in rsyslog_options %}
        {{ option }}
    {% endfor %}
{% endif %}

# Set our initial redirects here to ensure we catch everything
{% for item in rsyslog_defaults %}
{% if item.name|length>0 %}
{% set selector = [item.selectors|default('*.*')]|flatten|join(';') %}
{% set proto = item.proto|default('') %}
{% if proto == 'nosync' %}
{% set prefix = '' %}
{% elif proto == 'pipe' %}
{% set prefix = '|' %}
{% elif proto == 'tcp' %}
{% set prefix = '@@' %}
{% elif proto == 'udp' %}
{% set prefix = '@' %}
{% else %}
{% set prefix = '' %}
{% endif %}
{% if item.port|default(0)|int>0 %}
{% set suffix = ':' + item.port %}
{% else %}
{% set suffix = '' %}
{% endif %}
{% if item.format|default('')|length>0 %}
{% set format = ';' + item.format %}
{% else %}
{% set format = '' %}
{% endif %}
{{ selector }} {{ prefix }}{{ item.name }}{{ suffix }}{{ format }}
{% endif %}
{% endfor %}
