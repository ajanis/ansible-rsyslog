---
# defaults file for ansible-rsyslog

# defines if rsyslog should be reconfigured
rsyslog_config: true

# defines primary domain name
rsyslog_pri_domain_name: "{{ www_domain | default('example.org') }}"

# defines config files
rsyslog_config_file: /etc/rsyslog.conf
rsyslog_conf_dir: /etc/rsyslog.d
rsyslog_default_rules_file: "{{ rsyslog_conf_dir }}/50-default.conf"

# drop privileges
rsyslog_priv_drop: true
rsyslog_priv_drop_user: syslog
rsyslog_priv_drop_group: syslog

rsyslog_user: "{{ rsyslog_priv_drop_user if rsyslog_priv_drop else 'root' }}"
rsyslog_group: "{{ rsyslog_priv_drop_group if rsyslog_priv_drop else 'root' }}"

rsyslog_umask: "0022"

rsyslog_global_work_directory: "{{ '/var/lib/rsyslog' if ansible_os_family == 'RedHat' else '/var/spool/rsyslog' }}"

# enable modules
# rsyslog_modules:
#   - imuxsock
#   # - imjournal
#   - imklog
#   - immark

# defines if high precision timestamps should be used instead of the traditional log format
rsyslog_highprecision: false

rsyslog_modules:
  - name: builtin:omfwd
  - name: builtin:omfile
    options:
      template: "{{ 'RSYSLOG_FileFormat' if rsyslog_highprecision else 'RSYSLOG_TraditionalFileFormat' }}"
      dirCreateMode: "0755"
      dirOwner: "{{ rsyslog_user }}"
      dirGroup: "{{ rsyslog_group }}"
      fileCreateMode: "0640"
      fileOwner: "{{ rsyslog_user }}"
      fileGroup: "{{ rsyslog_group }}"
  - name: imjournal
  - name: imuxsock
  # - name: imklog
  # - name: imtcp
  # - name: imudp

rsyslog_inputs: []
# - name: imudp
#   options:
#     port: "514"
# - name: imtcp
#   options:
#     port: "514"

rsyslog_actions: []
## Telegraf Example
# - name: omfwd
#   selectors:
#     - "*.*"
#   options:
#     target: 127.0.0.1
#     port: "6514"
#     Template: RSYSLOG_SyslogProtocol23Format
#     protocol: tcp
#     TCP_Framing: octet-counted
#     action.resumeRetryCount: "-1"
#     queue.type: linkedlist
#     queue.saveOnShutdown: "on"
#     queue.filename: omfwd_log

## LEGACY CONFIGS
# Defines remote syslog servers
rsyslog_servers: []
# - name: "graylog.{{ rsyslog_pri_domain_name }}"
#   proto: udp
#   port: 514
#   selectors:
#     - authpriv.*
# - name: "logstash.{{ rsyslog_pri_domain_name }}"
#   proto: tcp
#   port: 514
#   selectors:
#     - "*.warn"
# - name: localhost #good for redirecting back itself..ex. logstash running on tcp/udp 10514...to get around logstash running on ports < 1024
#   proto: tcp
#   port: 10514
#   selectors:
#     - "*.*"
# Telegraf Example
# - name: (o)127.0.0.1
#   proto: tcp
#   port: 6514
#   format: RSYSLOG_SyslogProtocol23Format

# Defines rsyslog outputs to local log files:
rsyslog_localfiles:
  - name: /var/log/auth.log
    proto: file
    selectors: auth,authpriv.*
  - name: /var/log/syslog
    proto: nosync
    selectors:
      - "*.*"
      - auth,authpriv.none
  - name: /var/log/cron.log
    selectors: [cron.*]
  - name: /var/log/daemon.log
    selectors: daemon.*
  - name: /var/log/kern.log
    proto: nosync
    selectors: kern.*
  - name: /var/log/lpr.log
    proto: nosync
    selectors: lpr.*
  - name: /var/log/mail.log
    selectors: mail.*
  - name: /var/log/user.log
    selectors: user.*
  # Logging for the mail system.  Split it up so that
  # it is easy to write scripts to parse these files.
  - name: /var/log/mail.info
    proto: nosync
    selectors: mail.info
  - name: /var/log/mail.warn
    proto: nosync
    selectors: mail.warn
  - name: /var/log/mail.err
    selectors: mail.err

  # Logging for INN news system.
  #
  # - name: /var/log/news/news.crit
  #   selectors: news.crit
  # - name: /var/log/news/news.err
  #   selectors: news.err
  # - name: /var/log/news/news.notice
  #   proto: nosync
  #   selectors: news.notice

  # Some "catch-all" log files.
  - name: /var/log/debug
    proto: nosync
    selectors:
      - "*.=debug"
      - auth,authpriv.none
      - mail.none
  - name: /var/log/messages
    proto: nosync
    selectors:
      - "*.=info"
      - "*.=notice"
      - "*.=warn"
      - auth,authpriv.none
      - cron,daemon.none
      - mail.none

rsyslog_devices:
  # Emergencies are sent to everybody logged in.
  - name: :omusrmsg:*
    selectors: "*.emerg"

# Virtual console logs
# - name: /dev/tty8
#   selectors:
#     - "daemon,mail.*"
#     - news.=crit
#     - news.=err
#     - "news.=notice"
#     - "*.=debug"
#     - "*.=info"
#     - "*.=notice"
#     - "*.=warn"
#
# The named pipe /dev/xconsole is for the `xconsole' utility.  To use it,
# you must invoke `xconsole' with the `-file' option:
#
#    $ xconsole -file /dev/xconsole [...]
#
# NOTE: adjust the list below, or you'll go crazy if you have a reasonably
#      busy site..
#
# - name: /dev/xconsole
#   proto: pipe
#   selectors:
#     - daemon.*
#     - mail.*
#     - news.err
#     - "*.=debug"
#     - "*.=info"
#     - "*.=notice"
#     - "*.=warn"

rsyslog_defaults: "{{ rsyslog_servers | union(rsyslog_localfiles) | union(rsyslog_devices) }}"
